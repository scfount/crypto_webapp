[{"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/index.js":"1","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/reportWebVitals.js":"2","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/App.js":"3","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Button.js":"4","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Affine.js":"5","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Nav.js":"6","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Vigenere.js":"7","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Shift.js":"8","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftEncrypt.js":"9","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftDecrypt.js":"10"},{"size":500,"mtime":1645389170194,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1645389170194,"results":"13","hashOfConfig":"12"},{"size":775,"mtime":1647039222549,"results":"14","hashOfConfig":"12"},{"size":231,"mtime":1646198466987,"results":"15","hashOfConfig":"12"},{"size":2601,"mtime":1647040244332,"results":"16","hashOfConfig":"12"},{"size":757,"mtime":1647039429838,"results":"17","hashOfConfig":"12"},{"size":2607,"mtime":1647040253519,"results":"18","hashOfConfig":"12"},{"size":375,"mtime":1647041422306,"results":"19","hashOfConfig":"12"},{"size":2413,"mtime":1647041169807,"results":"20","hashOfConfig":"12"},{"size":2418,"mtime":1647041492929,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"rtlmth",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"25"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/index.js",[],[],["58","59"],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/reportWebVitals.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/App.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Button.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Affine.js",["60","61","62","63"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../App.css';\nimport Button from './Button';\n\nfunction Affine() {\n    const [encryptedText, setEncryptedText] = useState({})\n    const [shiftEncrypt, setShiftEncrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftEncrypt({\n            ...shiftEncrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                plaintext: shiftEncrypt.plaintext,\n                key: shiftEncrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setEncryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Affine Cipher</h1>\n                {/* <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"\">Plaintext:\n                            <input\n                                type=\"text\"\n                                name=\"plaintext\"\n                                id=\"plain-text\"\n                                value={shiftEncrypt.plaintext}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Key:\n                            <input\n                                type=\"number\"\n                                pattern='[0-9]'\n                                name=\"key\"\n                                id=\"key-num\"\n                                value={shiftEncrypt.key}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <Button name={'Encrypt'} />\n                </form> */}\n\n                <div>{encryptedText.status === 200 &&\n                    <div>\n                        <h4>Encrypted Text:</h4>\n                        <p>{encryptedText.data.ciphertext}</p>\n                    </div>}\n                </div>\n            </header>\n\n        </div>\n    );\n}\n\nexport default Affine;","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Nav.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Vigenere.js",["64","65","66","67"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../App.css';\nimport Button from './Button';\n\nfunction Vigenere() {\n    const [encryptedText, setEncryptedText] = useState({})\n    const [shiftEncrypt, setShiftEncrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftEncrypt({\n            ...shiftEncrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                plaintext: shiftEncrypt.plaintext,\n                key: shiftEncrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setEncryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Vigenere Cipher</h1>\n                {/* <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"\">Plaintext:\n                            <input\n                                type=\"text\"\n                                name=\"plaintext\"\n                                id=\"plain-text\"\n                                value={shiftEncrypt.plaintext}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Key:\n                            <input\n                                type=\"number\"\n                                pattern='[0-9]'\n                                name=\"key\"\n                                id=\"key-num\"\n                                value={shiftEncrypt.key}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <Button name={'Encrypt'} />\n                </form> */}\n\n                <div>{encryptedText.status === 200 &&\n                    <div>\n                        <h4>Encrypted Text:</h4>\n                        <p>{encryptedText.data.ciphertext}</p>\n                    </div>}\n                </div>\n            </header>\n\n        </div>\n    );\n}\n\nexport default Vigenere;","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Shift.js",["68","69"],[],"import React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport ShiftEncrypt from './shift/ShiftEncrypt';\nimport ShiftDecrypt from './shift/ShiftDecrypt';\n\nfunction Shift() {\n\n\n    return (\n        <div className=\"App\">\n            <h1>Shift Cipher</h1>\n            <ShiftEncrypt />\n            <ShiftDecrypt />\n\n        </div>\n    );\n}\n\nexport default Shift;","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftEncrypt.js",["70"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\n\nfunction ShiftEncrypt() {\n    const [encryptedText, setEncryptedText] = useState({})\n    const [shiftEncrypt, setShiftEncrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftEncrypt({\n            ...shiftEncrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                plaintext: shiftEncrypt.plaintext,\n                key: shiftEncrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setEncryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <h2>Encrypt</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Plaintext:\n                        <input\n                            type=\"text\"\n                            name=\"plaintext\"\n                            id=\"plain-text\"\n                            value={shiftEncrypt.plaintext}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Key:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"key\"\n                            id=\"key-num\"\n                            value={shiftEncrypt.key}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Encrypt'} />\n            </form>\n\n            <div>{encryptedText.status === 200 &&\n                <div>\n                    <h4>Encrypted Text:</h4>\n                    <p>{encryptedText.data.ciphertext}</p>\n                </div>}\n            </div>\n\n        </div>\n    );\n}\n\nexport default ShiftEncrypt;","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftDecrypt.js",["71"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\n\nfunction ShiftDecrypt() {\n    const [decryptedText, setDecryptedText] = useState({})\n    const [shiftDecrypt, setShiftDecrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftDecrypt({\n            ...shiftDecrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                ciphertext: shiftDecrypt.ciphertext,\n                key: shiftDecrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setDecryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <h2>Decrypt</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Ciphertext:\n                        <input\n                            type=\"text\"\n                            name=\"ciphertext\"\n                            id=\"cipher-text\"\n                            value={shiftDecrypt.ciphertext}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Key:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"key\"\n                            id=\"key-num\"\n                            value={shiftDecrypt.key}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Decrypt'} />\n            </form>\n\n            <div>{decryptedText.status === 200 &&\n                <div>\n                    <h4>Decrypted Text:</h4>\n                    <p>{decryptedText.data.plaintext}</p>\n                </div>}\n            </div>\n\n        </div>\n    );\n}\n\nexport default ShiftDecrypt;",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"80","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":14},{"ruleId":"76","severity":1,"message":"81","line":13,"column":11,"nodeType":"78","messageId":"79","endLine":13,"endColumn":23},{"ruleId":"76","severity":1,"message":"82","line":22,"column":11,"nodeType":"78","messageId":"79","endLine":22,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"80","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":14},{"ruleId":"76","severity":1,"message":"81","line":13,"column":11,"nodeType":"78","messageId":"79","endLine":13,"endColumn":23},{"ruleId":"76","severity":1,"message":"82","line":22,"column":11,"nodeType":"78","messageId":"79","endLine":22,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"83","line":1,"column":28,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'handleChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]