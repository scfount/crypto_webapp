[{"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/index.js":"1","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/reportWebVitals.js":"2","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/App.js":"3","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Button.js":"4","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Affine.js":"5","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Nav.js":"6","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Vigenere.js":"7","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Shift.js":"8"},{"size":500,"mtime":1645389170194,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1645389170194,"results":"11","hashOfConfig":"10"},{"size":775,"mtime":1647039222549,"results":"12","hashOfConfig":"10"},{"size":231,"mtime":1646198466987,"results":"13","hashOfConfig":"10"},{"size":2595,"mtime":1647036725078,"results":"14","hashOfConfig":"10"},{"size":757,"mtime":1647039429838,"results":"15","hashOfConfig":"10"},{"size":2601,"mtime":1647036730444,"results":"16","hashOfConfig":"10"},{"size":2592,"mtime":1647034201940,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"rtlmth",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"21"},"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/index.js",[],[],["46","47"],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/reportWebVitals.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/App.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Button.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Affine.js",["48"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../App.css';\nimport Button from './Button';\n\nfunction Affine() {\n    const [encryptedText, setEncryptedText] = useState({})\n    const [shiftEncrypt, setShiftEncrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftEncrypt({\n            ...shiftEncrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                plaintext: shiftEncrypt.plaintext,\n                key: shiftEncrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setEncryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Affine Cipher</h1>\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"\">Plaintext:\n                            <input\n                                type=\"text\"\n                                name=\"plaintext\"\n                                id=\"plain-text\"\n                                value={shiftEncrypt.plaintext}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Shift:\n                            <input\n                                type=\"number\"\n                                pattern='[0-9]'\n                                name=\"key\"\n                                id=\"key-num\"\n                                value={shiftEncrypt.key}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <Button name={'Encrypt'} />\n                </form>\n\n                <div>{encryptedText.status === 200 &&\n                    <div>\n                        <h4>Encrypted Text:</h4>\n                        <p>{encryptedText.data.ciphertext}</p>\n                    </div>}\n                </div>\n            </header>\n\n        </div>\n    );\n}\n\nexport default Affine;","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Nav.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Vigenere.js",["49"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../App.css';\nimport Button from './Button';\n\nfunction Vigenere() {\n    const [encryptedText, setEncryptedText] = useState({})\n    const [shiftEncrypt, setShiftEncrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftEncrypt({\n            ...shiftEncrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                plaintext: shiftEncrypt.plaintext,\n                key: shiftEncrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setEncryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Vigenere Cipher</h1>\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"\">Plaintext:\n                            <input\n                                type=\"text\"\n                                name=\"plaintext\"\n                                id=\"plain-text\"\n                                value={shiftEncrypt.plaintext}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Shift:\n                            <input\n                                type=\"number\"\n                                pattern='[0-9]'\n                                name=\"key\"\n                                id=\"key-num\"\n                                value={shiftEncrypt.key}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <Button name={'Encrypt'} />\n                </form>\n\n                <div>{encryptedText.status === 200 &&\n                    <div>\n                        <h4>Encrypted Text:</h4>\n                        <p>{encryptedText.data.ciphertext}</p>\n                    </div>}\n                </div>\n            </header>\n\n        </div>\n    );\n}\n\nexport default Vigenere;","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Shift.js",["50"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../App.css';\nimport Button from './Button';\n\nfunction Shift() {\n    const [encryptedText, setEncryptedText] = useState({})\n    const [shiftEncrypt, setShiftEncrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftEncrypt({\n            ...shiftEncrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                plaintext: shiftEncrypt.plaintext,\n                key: shiftEncrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setEncryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Shift Cipher</h1>\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"\">Plaintext:\n                            <input\n                                type=\"text\"\n                                name=\"plaintext\"\n                                id=\"plain-text\"\n                                value={shiftEncrypt.plaintext}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Shift:\n                            <input\n                                type=\"number\"\n                                pattern='[0-9]'\n                                name=\"key\"\n                                id=\"key-num\"\n                                value={shiftEncrypt.key}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <Button name={'Encrypt'} />\n                </form>\n\n                <div>{encryptedText.status === 200 &&\n                    <div>\n                        <h4>Encrypted Text:</h4>\n                        <p>{encryptedText.data.ciphertext}</p>\n                    </div>}\n                </div>\n            </header>\n\n        </div>\n    );\n}\n\nexport default Shift;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]