[{"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/index.js":"1","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/reportWebVitals.js":"2","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/App.js":"3","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Button.js":"4","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Nav.js":"5","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftEncrypt.js":"6","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftDecrypt.js":"7","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/Shift.js":"8","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/affine/Affine.js":"9","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/vigenere/Vigenere.js":"10","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/vigenere/VigenereEncrypt.js":"11","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/vigenere/VigenereDecrypt.js":"12"},{"size":500,"mtime":1645389170194,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1645389170194,"results":"15","hashOfConfig":"14"},{"size":797,"mtime":1647046448441,"results":"16","hashOfConfig":"14"},{"size":231,"mtime":1646198466987,"results":"17","hashOfConfig":"14"},{"size":757,"mtime":1647044213247,"results":"18","hashOfConfig":"14"},{"size":2413,"mtime":1647041726096,"results":"19","hashOfConfig":"14"},{"size":2418,"mtime":1647041726096,"results":"20","hashOfConfig":"14"},{"size":340,"mtime":1647046321026,"results":"21","hashOfConfig":"14"},{"size":2605,"mtime":1647046374728,"results":"22","hashOfConfig":"14"},{"size":496,"mtime":1647047447071,"results":"23","hashOfConfig":"14"},{"size":2404,"mtime":1647047258267,"results":"24","hashOfConfig":"14"},{"size":2408,"mtime":1647047492104,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"rtlmth",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/index.js",[],[],["71","72"],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/reportWebVitals.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/App.js",[],[],["73","74"],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Button.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Nav.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftEncrypt.js",["75"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\n\nfunction ShiftEncrypt() {\n    const [encryptedText, setEncryptedText] = useState({})\n    const [shiftEncrypt, setShiftEncrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftEncrypt({\n            ...shiftEncrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                plaintext: shiftEncrypt.plaintext,\n                key: shiftEncrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setEncryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <h2>Encrypt</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Plaintext:\n                        <input\n                            type=\"text\"\n                            name=\"plaintext\"\n                            id=\"plain-text\"\n                            value={shiftEncrypt.plaintext}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Key:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"key\"\n                            id=\"key-num\"\n                            value={shiftEncrypt.key}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Encrypt'} />\n            </form>\n\n            <div>{encryptedText.status === 200 &&\n                <div>\n                    <h4>Encrypted Text:</h4>\n                    <p>{encryptedText.data.ciphertext}</p>\n                </div>}\n            </div>\n\n        </div>\n    );\n}\n\nexport default ShiftEncrypt;","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftDecrypt.js",["76"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\n\nfunction ShiftDecrypt() {\n    const [decryptedText, setDecryptedText] = useState({})\n    const [shiftDecrypt, setShiftDecrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftDecrypt({\n            ...shiftDecrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                ciphertext: shiftDecrypt.ciphertext,\n                key: shiftDecrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setDecryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <h2>Decrypt</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Ciphertext:\n                        <input\n                            type=\"text\"\n                            name=\"ciphertext\"\n                            id=\"cipher-text\"\n                            value={shiftDecrypt.ciphertext}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Key:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"key\"\n                            id=\"key-num\"\n                            value={shiftDecrypt.key}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Decrypt'} />\n            </form>\n\n            <div>{decryptedText.status === 200 &&\n                <div>\n                    <h4>Decrypted Text:</h4>\n                    <p>{decryptedText.data.plaintext}</p>\n                </div>}\n            </div>\n\n        </div>\n    );\n}\n\nexport default ShiftDecrypt;","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/Shift.js",[],[],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/affine/Affine.js",["77","78","79","80"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\n\nfunction Affine() {\n    const [encryptedText, setEncryptedText] = useState({})\n    const [shiftEncrypt, setShiftEncrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftEncrypt({\n            ...shiftEncrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                plaintext: shiftEncrypt.plaintext,\n                key: shiftEncrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setEncryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Affine Cipher</h1>\n                {/* <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"\">Plaintext:\n                            <input\n                                type=\"text\"\n                                name=\"plaintext\"\n                                id=\"plain-text\"\n                                value={shiftEncrypt.plaintext}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Key:\n                            <input\n                                type=\"number\"\n                                pattern='[0-9]'\n                                name=\"key\"\n                                id=\"key-num\"\n                                value={shiftEncrypt.key}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <Button name={'Encrypt'} />\n                </form> */}\n\n                <div>{encryptedText.status === 200 &&\n                    <div>\n                        <h4>Encrypted Text:</h4>\n                        <p>{encryptedText.data.ciphertext}</p>\n                    </div>}\n                </div>\n            </header>\n\n        </div>\n    );\n}\n\nexport default Affine;","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/vigenere/Vigenere.js",["81","82","83"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport VigenereEncrypt from './VigenereEncrypt';\nimport VigenereDecrypt from './VigenereDecrypt';\n\nfunction Vigenere() {\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Vigenere Cipher</h1>\n                <VigenereEncrypt />\n                <VigenereDecrypt />\n            </header>\n\n        </div>\n    );\n}\n\nexport default Vigenere;",["84","85"],"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/vigenere/VigenereEncrypt.js",["86"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\n\nfunction VigenereEncrypt() {\n    const [encryptedText, setEncryptedText] = useState({})\n    const [vigenereEncrypt, setVigenereEncrypt] = useState({\n        plaintext: '',\n        key: ''\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setVigenereEncrypt({\n            ...vigenereEncrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/vigenere_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                plaintext: vigenereEncrypt.plaintext,\n                key: vigenereEncrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setEncryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <h2>Encrypt</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Plaintext:\n                        <input\n                            type=\"text\"\n                            name=\"plaintext\"\n                            id=\"plain-text\"\n                            value={vigenereEncrypt.plaintext}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Key:\n                        <input\n                            type=\"text\"\n                            name=\"key\"\n                            id=\"key-value\"\n                            value={vigenereEncrypt.key}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Encrypt'} />\n            </form>\n\n            <div>{encryptedText.status === 200 &&\n                <div>\n                    <h4>Encrypted Text:</h4>\n                    <p>{encryptedText.data.ciphertext}</p>\n                </div>}\n            </div>\n        </div>\n\n\n    );\n}\n\nexport default VigenereEncrypt;","/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/vigenere/VigenereDecrypt.js",["87"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\n\nfunction VigenereDecrypt() {\n    const [decryptedText, setDecryptedText] = useState({})\n    const [vigenereDecrypt, setVigenereDecrypt] = useState({\n        plaintext: '',\n        key: ''\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setVigenereDecrypt({\n            ...vigenereDecrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/vigenere_decrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                ciphertext: vigenereDecrypt.ciphertext,\n                key: vigenereDecrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setDecryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <h2>Decrypt</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Ciphertext:\n                        <input\n                            type=\"text\"\n                            name=\"ciphertext\"\n                            id=\"cipher-text\"\n                            value={vigenereDecrypt.ciphertext}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Key:\n                        <input\n                            type=\"text\"\n                            name=\"key\"\n                            id=\"key-value\"\n                            value={vigenereDecrypt.key}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Decrypt'} />\n            </form>\n\n            <div>{decryptedText.status === 200 &&\n                <div>\n                    <h4>Decrypted Text:</h4>\n                    <p>{decryptedText.data.plaintext}</p>\n                </div>}\n            </div>\n\n        </div>\n    );\n}\n\nexport default VigenereDecrypt;",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"98","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":14},{"ruleId":"94","severity":1,"message":"99","line":13,"column":11,"nodeType":"96","messageId":"97","endLine":13,"endColumn":23},{"ruleId":"94","severity":1,"message":"100","line":22,"column":11,"nodeType":"96","messageId":"97","endLine":22,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"101","line":1,"column":28,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"102","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"88","replacedBy":"103"},{"ruleId":"90","replacedBy":"104"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],["105"],["106"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'handleChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.",["105"],["106"],"no-global-assign","no-unsafe-negation"]