{"ast":null,"code":"import _defineProperty from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import axios from'axios';import'../App.css';import Button from'./Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Vigenere(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),encryptedText=_useState2[0],setEncryptedText=_useState2[1];var _useState3=useState({plaintext:'',key:0}),_useState4=_slicedToArray(_useState3,2),shiftEncrypt=_useState4[0],setShiftEncrypt=_useState4[1];var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setShiftEncrypt(_objectSpread(_objectSpread({},shiftEncrypt),{},_defineProperty({},name,value)));};var handleSubmit=function handleSubmit(event){event.preventDefault();// const path = 'http://127.0.0.1:5000/shift_encrypt'\nvar path='https://cryptography-web-application.herokuapp.com/shift_encrypt';axios({method:'POST',url:path,data:{plaintext:shiftEncrypt.plaintext,key:shiftEncrypt.key}}).then(function(response){console.log(\"SUCCESS\",response);setEncryptedText(response);}).catch(function(error){console.log(error);});};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Vigenere Cipher\"}),/*#__PURE__*/_jsx(\"div\",{children:encryptedText.status===200&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Encrypted Text:\"}),/*#__PURE__*/_jsx(\"p\",{children:encryptedText.data.ciphertext})]})})]})});}export default Vigenere;","map":{"version":3,"sources":["/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/Vigenere.js"],"names":["React","useEffect","useState","axios","Button","Vigenere","encryptedText","setEncryptedText","plaintext","key","shiftEncrypt","setShiftEncrypt","handleChange","event","target","name","value","handleSubmit","preventDefault","path","method","url","data","then","response","console","log","catch","error","status","ciphertext"],"mappings":"0bAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFAEA,QAASC,CAAAA,QAAT,EAAoB,CAChB,cAA0CH,QAAQ,CAAC,EAAD,CAAlD,wCAAOI,aAAP,eAAsBC,gBAAtB,eACA,eAAwCL,QAAQ,CAAC,CAC7CM,SAAS,CAAE,EADkC,CAE7CC,GAAG,CAAE,CAFwC,CAAD,CAAhD,yCAAOC,YAAP,eAAqBC,eAArB,eAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CACAL,eAAe,gCACRD,YADQ,wBAEVK,IAFU,CAEHC,KAFG,GAAf,CAIH,CAND,CASA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAW,CAC5BA,KAAK,CAACK,cAAN,GACA;AACA,GAAMC,CAAAA,IAAI,CAAG,kEAAb,CACAhB,KAAK,CAAC,CACFiB,MAAM,CAAE,MADN,CAEFC,GAAG,CAAEF,IAFH,CAGFG,IAAI,CAAE,CACFd,SAAS,CAAEE,YAAY,CAACF,SADtB,CAEFC,GAAG,CAAEC,YAAY,CAACD,GAFhB,CAHJ,CAAD,CAAL,CAQKc,IARL,CAQU,SAAAC,QAAQ,CAAI,CACdC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBF,QAAvB,EACAjB,gBAAgB,CAACiB,QAAD,CAAhB,CACH,CAXL,EAWOG,KAXP,CAWa,SAAAC,KAAK,CAAI,CACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ,EACH,CAbL,EAcH,CAlBD,CAoBA,mBACI,YAAK,SAAS,CAAC,KAAf,uBACI,gBAAQ,SAAS,CAAC,YAAlB,wBACI,uCADJ,cA2BI,qBAAMtB,aAAa,CAACuB,MAAd,GAAyB,GAAzB,eACF,oCACI,uCADJ,cAEI,mBAAIvB,aAAa,CAACgB,IAAd,CAAmBQ,UAAvB,EAFJ,GADJ,EA3BJ,GADJ,EADJ,CAuCH,CAED,cAAezB,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../App.css';\nimport Button from './Button';\n\nfunction Vigenere() {\n    const [encryptedText, setEncryptedText] = useState({})\n    const [shiftEncrypt, setShiftEncrypt] = useState({\n        plaintext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftEncrypt({\n            ...shiftEncrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                plaintext: shiftEncrypt.plaintext,\n                key: shiftEncrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setEncryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Vigenere Cipher</h1>\n                {/* <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"\">Plaintext:\n                            <input\n                                type=\"text\"\n                                name=\"plaintext\"\n                                id=\"plain-text\"\n                                value={shiftEncrypt.plaintext}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <div>\n                        <label htmlFor=\"\">Key:\n                            <input\n                                type=\"number\"\n                                pattern='[0-9]'\n                                name=\"key\"\n                                id=\"key-num\"\n                                value={shiftEncrypt.key}\n                                onChange={handleChange} />\n                        </label>\n                    </div>\n                    <Button name={'Encrypt'} />\n                </form> */}\n\n                <div>{encryptedText.status === 200 &&\n                    <div>\n                        <h4>Encrypted Text:</h4>\n                        <p>{encryptedText.data.ciphertext}</p>\n                    </div>}\n                </div>\n            </header>\n\n        </div>\n    );\n}\n\nexport default Vigenere;"]},"metadata":{},"sourceType":"module"}