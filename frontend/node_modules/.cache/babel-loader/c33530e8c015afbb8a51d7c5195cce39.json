{"ast":null,"code":"import _defineProperty from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import axios from'axios';import'../../App.css';import Button from'../Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ShiftDecrypt(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),decryptedText=_useState2[0],setDecryptedText=_useState2[1];var _useState3=useState({ciphertext:'',key:0}),_useState4=_slicedToArray(_useState3,2),shiftDecrypt=_useState4[0],setShiftDecrypt=_useState4[1];var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setShiftDecrypt(_objectSpread(_objectSpread({},shiftDecrypt),{},_defineProperty({},name,value)));};var handleSubmit=function handleSubmit(event){event.preventDefault();// const path = 'http://127.0.0.1:5000/shift_encrypt'\nvar path='https://cryptography-web-application.herokuapp.com/shift_decrypt';axios({method:'POST',url:path,data:{ciphertext:shiftDecrypt.ciphertext,key:shiftDecrypt.key}}).then(function(response){console.log(\"SUCCESS\",response);setDecryptedText(response);}).catch(function(error){console.log(error);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Decrypt\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"\",children:[\"Ciphertext:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"ciphertext\",id:\"cipher-text\",value:shiftDecrypt.ciphertext,onChange:handleChange})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"\",children:[\"Key:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",pattern:\"[0-9]\",name:\"key\",id:\"key-num\",value:shiftDecrypt.key,onChange:handleChange})]})}),/*#__PURE__*/_jsx(Button,{name:'Decrypt'})]}),/*#__PURE__*/_jsx(\"div\",{children:decryptedText.status===200&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Decrypted Text:\"}),/*#__PURE__*/_jsx(\"p\",{children:decryptedText.data.plaintext})]})})]});}export default ShiftDecrypt;","map":{"version":3,"sources":["/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftDecrypt.js"],"names":["React","useEffect","useState","axios","Button","ShiftDecrypt","decryptedText","setDecryptedText","ciphertext","key","shiftDecrypt","setShiftDecrypt","handleChange","event","target","name","value","handleSubmit","preventDefault","path","method","url","data","then","response","console","log","catch","error","status","plaintext"],"mappings":"0bAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,C,wFAEA,QAASC,CAAAA,YAAT,EAAwB,CACpB,cAA0CH,QAAQ,CAAC,EAAD,CAAlD,wCAAOI,aAAP,eAAsBC,gBAAtB,eACA,eAAwCL,QAAQ,CAAC,CAC7CM,UAAU,CAAE,EADiC,CAE7CC,GAAG,CAAE,CAFwC,CAAD,CAAhD,yCAAOC,YAAP,eAAqBC,eAArB,eAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CACAL,eAAe,gCACRD,YADQ,wBAEVK,IAFU,CAEHC,KAFG,GAAf,CAIH,CAND,CASA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAW,CAC5BA,KAAK,CAACK,cAAN,GACA;AACA,GAAMC,CAAAA,IAAI,CAAG,kEAAb,CACAhB,KAAK,CAAC,CACFiB,MAAM,CAAE,MADN,CAEFC,GAAG,CAAEF,IAFH,CAGFG,IAAI,CAAE,CACFd,UAAU,CAAEE,YAAY,CAACF,UADvB,CAEFC,GAAG,CAAEC,YAAY,CAACD,GAFhB,CAHJ,CAAD,CAAL,CAQKc,IARL,CAQU,SAAAC,QAAQ,CAAI,CACdC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBF,QAAvB,EACAjB,gBAAgB,CAACiB,QAAD,CAAhB,CACH,CAXL,EAWOG,KAXP,CAWa,SAAAC,KAAK,CAAI,CACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ,EACH,CAbL,EAcH,CAlBD,CAoBA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,+BADJ,cAEI,cAAM,QAAQ,CAAEX,YAAhB,wBACI,kCACI,eAAO,OAAO,CAAC,EAAf,sCACI,cACI,IAAI,CAAC,MADT,CAEI,IAAI,CAAC,YAFT,CAGI,EAAE,CAAC,aAHP,CAII,KAAK,CAAEP,YAAY,CAACF,UAJxB,CAKI,QAAQ,CAAEI,YALd,EADJ,GADJ,EADJ,cAWI,kCACI,eAAO,OAAO,CAAC,EAAf,+BACI,cACI,IAAI,CAAC,QADT,CAEI,OAAO,CAAC,OAFZ,CAGI,IAAI,CAAC,KAHT,CAII,EAAE,CAAC,SAJP,CAKI,KAAK,CAAEF,YAAY,CAACD,GALxB,CAMI,QAAQ,CAAEG,YANd,EADJ,GADJ,EAXJ,cAsBI,KAAC,MAAD,EAAQ,IAAI,CAAE,SAAd,EAtBJ,GAFJ,cA2BI,qBAAMN,aAAa,CAACuB,MAAd,GAAyB,GAAzB,eACF,oCACI,uCADJ,cAEI,mBAAIvB,aAAa,CAACgB,IAAd,CAAmBQ,SAAvB,EAFJ,GADJ,EA3BJ,GADJ,CAqCH,CAED,cAAezB,CAAAA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\n\nfunction ShiftDecrypt() {\n    const [decryptedText, setDecryptedText] = useState({})\n    const [shiftDecrypt, setShiftDecrypt] = useState({\n        ciphertext: '',\n        key: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftDecrypt({\n            ...shiftDecrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/shift_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                ciphertext: shiftDecrypt.ciphertext,\n                key: shiftDecrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setDecryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div className=\"App\">\n            <h2>Decrypt</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Ciphertext:\n                        <input\n                            type=\"text\"\n                            name=\"ciphertext\"\n                            id=\"cipher-text\"\n                            value={shiftDecrypt.ciphertext}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Key:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"key\"\n                            id=\"key-num\"\n                            value={shiftDecrypt.key}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Decrypt'} />\n            </form>\n\n            <div>{decryptedText.status === 200 &&\n                <div>\n                    <h4>Decrypted Text:</h4>\n                    <p>{decryptedText.data.plaintext}</p>\n                </div>}\n            </div>\n\n        </div>\n    );\n}\n\nexport default ShiftDecrypt;"]},"metadata":{},"sourceType":"module"}