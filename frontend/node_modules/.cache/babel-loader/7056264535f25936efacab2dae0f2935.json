{"ast":null,"code":"var _jsxFileName = \"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftDecrypt.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../../App.css';\nimport Button from '../Button';\nimport Card from '../Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShiftDecrypt() {\n  _s();\n\n  const [response, setResponse] = useState({});\n  const [ciphertext, setCiphertext] = useState({\n    text: \"\",\n    key: \"\"\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCiphertext({ ...ciphertext,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const path = 'http://127.0.0.1:5000/shift_decrypt'; // const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt'\n\n    axios({\n      method: 'POST',\n      url: path,\n      data: {\n        text: ciphertext.text,\n        key: ciphertext.key\n      }\n    }).then(response => {\n      console.log(\"SUCCESS\", response);\n      setResponse(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Decryption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Ciphertext:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"text\",\n            id: \"text\",\n            value: ciphertext.text,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            pattern: \"[0-9]\",\n            name: \"key\",\n            id: \"key-num\",\n            value: ciphertext.key,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: 'Decrypt'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: response.status === 200 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Decrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), JSON.parse(response.data.plaintext).map(decryption => /*#__PURE__*/_jsxDEV(Card, {\n          text: decryption['text'],\n          shiftKey: decryption['key']\n        }, decryption['text'], false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShiftDecrypt, \"xULbG1dIs7fmRU6L3ZWh125qBhA=\");\n\n_c = ShiftDecrypt;\nexport default ShiftDecrypt;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShiftDecrypt\");","map":{"version":3,"sources":["/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftDecrypt.js"],"names":["React","useState","axios","Button","Card","ShiftDecrypt","response","setResponse","ciphertext","setCiphertext","text","key","handleChange","event","name","value","target","handleSubmit","preventDefault","path","method","url","data","then","console","log","catch","error","status","JSON","parse","plaintext","map","decryption"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\nimport Card from '../Card';\n\nfunction ShiftDecrypt() {\n    const [response, setResponse] = useState({})\n    const [ciphertext, setCiphertext] = useState({\n        text: \"\",\n        key: \"\"\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setCiphertext({\n            ...ciphertext,\n            [name]: value\n        });\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const path = 'http://127.0.0.1:5000/shift_decrypt'\n        // const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                text: ciphertext.text,\n                key: ciphertext.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setResponse(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div>\n            <h3>Decryption</h3>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Ciphertext:\n                        <input\n                            type=\"text\"\n                            name=\"text\"\n                            id=\"text\"\n                            value={ciphertext.text}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Key:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"key\"\n                            id=\"key-num\"\n                            value={ciphertext.key}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Decrypt'} />\n            </form>\n\n            <div className='text'>\n                {response.status === 200 &&\n                    <div>\n                        <h4>Decrypted Text:</h4>\n                        {JSON.parse(response.data.plaintext).map((decryption) =>\n                            <Card text={decryption['text']} shiftKey={decryption['key']} key={decryption['text']} />)\n                        }\n                    </div>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default ShiftDecrypt;"]},"metadata":{},"sourceType":"module"}