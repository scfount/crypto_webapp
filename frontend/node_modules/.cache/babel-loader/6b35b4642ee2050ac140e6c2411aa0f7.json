{"ast":null,"code":"var _jsxFileName = \"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Button from './components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [message, setMessage] = useState({})\n  const [cipherText, setCipherText] = useState({});\n  const [shiftEncrypt, setShiftEncrypt] = useState({\n    plaintext: '',\n    shift: 0\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setShiftEncrypt({ ...shiftEncrypt,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const path = 'http://127.0.0.1:5000/shift_encrypt'; // const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt'\n\n    axios({\n      method: 'POST',\n      url: path,\n      data: {\n        plaintext: shiftEncrypt.plaintext,\n        shift: shiftEncrypt.shift\n      }\n    }).then(response => {\n      // console.log(\"SUCCESS\", response)\n      setCipherText(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cryptography Web App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Plaintext:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"plaintext\",\n            id: \"plain-text\",\n            value: shiftEncrypt.plaintext,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Shift:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            pattern: \"[0-9]\",\n            name: \"shift\",\n            id: \"shift-num\",\n            value: shiftEncrypt.shift,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          name: 'Encrypt'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cipherText.status === 200 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: cipherText.cipher_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cryptic...Fail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n} // useEffect(() => {\n//   // const path = 'http://127.0.0.1:5000/crypto'\n//   const path = 'http://127.0.0.1:5000/shift_decrypt'\n//   // const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt'\n//   axios({\n//     method: 'POST',\n//     url: path,\n//     data: {\n//       cipher_text: cipherObj\n//     }\n//   })\n//     .then(response => {\n//       console.log(\"SUCCESS\", response)\n//       setPlainText(response)\n//     }).catch(error => {\n//       console.log(error)\n//     })\n// }, [])\n\n\n_s(App, \"Zazj9PjGuFzon8kT2/N+Wz4mJzw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/App.js"],"names":["React","useEffect","useState","axios","Button","App","cipherText","setCipherText","shiftEncrypt","setShiftEncrypt","plaintext","shift","handleChange","event","name","value","target","handleSubmit","preventDefault","path","method","url","data","then","response","catch","error","console","log","status","cipher_text"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport Button from './components/Button';\n\nfunction App() {\n  // const [message, setMessage] = useState({})\n  const [cipherText, setCipherText] = useState({\n\n  })\n\n  const [shiftEncrypt, setShiftEncrypt] = useState({\n    plaintext: '',\n    shift: 0\n  })\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setShiftEncrypt({\n      ...shiftEncrypt,\n      [name]: value\n    });\n  };\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const path = 'http://127.0.0.1:5000/shift_encrypt'\n    // const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt'\n    axios({\n      method: 'POST',\n      url: path,\n      data: {\n        plaintext: shiftEncrypt.plaintext,\n        shift: shiftEncrypt.shift\n      }\n    })\n      .then(response => {\n        // console.log(\"SUCCESS\", response)\n        setCipherText(response.data)\n      }).catch(error => {\n        console.log(error)\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Cryptography Web App</h1>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"\">Plaintext:\n            <input\n              type=\"text\"\n              name=\"plaintext\"\n              id=\"plain-text\"\n              value={shiftEncrypt.plaintext}\n              onChange={handleChange} />\n          </label>\n          <label htmlFor=\"\">Shift:\n            <input\n              type=\"number\"\n              pattern='[0-9]'\n              name=\"shift\"\n              id=\"shift-num\"\n              value={shiftEncrypt.shift}\n              onChange={handleChange} />\n          </label>\n          <Button name={'Encrypt'} />\n        </form>\n\n        <div>{cipherText.status === 200 ?\n          <h3>{cipherText.cipher_text}</h3>\n          :\n          <h3>Cryptic...Fail</h3>}\n        </div>\n      </header>\n\n    </div>\n  );\n}\n// useEffect(() => {\n//   // const path = 'http://127.0.0.1:5000/crypto'\n//   const path = 'http://127.0.0.1:5000/shift_decrypt'\n//   // const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt'\n//   axios({\n//     method: 'POST',\n//     url: path,\n//     data: {\n//       cipher_text: cipherObj\n//     }\n//   })\n//     .then(response => {\n//       console.log(\"SUCCESS\", response)\n//       setPlainText(response)\n//     }).catch(error => {\n//       console.log(error)\n//     })\n\n// }, [])\nexport default App;"]},"metadata":{},"sourceType":"module"}