{"ast":null,"code":"import _defineProperty from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import React,{useEffect,useState}from'react';import axios from'axios';import Button from'./components/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),encryptedText=_useState2[0],setEncryptedText=_useState2[1];var _useState3=useState({plaintext:'',key:0}),_useState4=_slicedToArray(_useState3,2),shiftEncrypt=_useState4[0],setShiftEncrypt=_useState4[1];var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setShiftEncrypt(_objectSpread(_objectSpread({},shiftEncrypt),{},_defineProperty({},name,value)));};var handleSubmit=function handleSubmit(event){event.preventDefault();// const path = 'http://127.0.0.1:5000/shift_encrypt'\nvar path='https://cryptography-web-application.herokuapp.com/shift_encrypt';axios({method:'POST',url:path,data:{plaintext:shiftEncrypt.plaintext,key:shiftEncrypt.key}}).then(function(response){console.log(\"SUCCESS\",response);setEncryptedText(response);}).catch(function(error){console.log(error);});};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Cryptography Web App\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"\",children:[\"Plaintext:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"plaintext\",id:\"plain-text\",value:shiftEncrypt.plaintext,onChange:handleChange})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"\",children:[\"Shift:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",pattern:\"[0-9]\",name:\"key\",id:\"key-num\",value:shiftEncrypt.key,onChange:handleChange})]})}),/*#__PURE__*/_jsx(Button,{name:'Encrypt'})]}),/*#__PURE__*/_jsx(\"div\",{children:encryptedText.status===200&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Encrypted Text:\"}),/*#__PURE__*/_jsx(\"p\",{children:encryptedText.data.ciphertext})]})})]})});}export default App;","map":{"version":3,"sources":["/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/App.js"],"names":["React","useEffect","useState","axios","Button","App","encryptedText","setEncryptedText","plaintext","key","shiftEncrypt","setShiftEncrypt","handleChange","event","target","name","value","handleSubmit","preventDefault","path","method","url","data","then","response","console","log","catch","error","status","ciphertext"],"mappings":"0bAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA0CH,QAAQ,CAAC,EAAD,CAAlD,wCAAOI,aAAP,eAAsBC,gBAAtB,eACA,eAAwCL,QAAQ,CAAC,CAC/CM,SAAS,CAAE,EADoC,CAE/CC,GAAG,CAAE,CAF0C,CAAD,CAAhD,yCAAOC,YAAP,eAAqBC,eAArB,eAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CACAL,eAAe,gCACVD,YADU,wBAEZK,IAFY,CAELC,KAFK,GAAf,CAID,CAND,CASA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAW,CAC9BA,KAAK,CAACK,cAAN,GACA;AACA,GAAMC,CAAAA,IAAI,CAAG,kEAAb,CACAhB,KAAK,CAAC,CACJiB,MAAM,CAAE,MADJ,CAEJC,GAAG,CAAEF,IAFD,CAGJG,IAAI,CAAE,CACJd,SAAS,CAAEE,YAAY,CAACF,SADpB,CAEJC,GAAG,CAAEC,YAAY,CAACD,GAFd,CAHF,CAAD,CAAL,CAQGc,IARH,CAQQ,SAAAC,QAAQ,CAAI,CAChBC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBF,QAAvB,EACAjB,gBAAgB,CAACiB,QAAD,CAAhB,CACD,CAXH,EAWKG,KAXL,CAWW,SAAAC,KAAK,CAAI,CAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ,EACD,CAbH,EAcD,CAlBD,CAoBA,mBACE,YAAK,SAAS,CAAC,KAAf,uBACE,gBAAQ,SAAS,CAAC,YAAlB,wBACE,4CADF,cAEE,cAAM,QAAQ,CAAEX,YAAhB,wBACE,kCACE,eAAO,OAAO,CAAC,EAAf,qCACE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,WAFP,CAGE,EAAE,CAAC,YAHL,CAIE,KAAK,CAAEP,YAAY,CAACF,SAJtB,CAKE,QAAQ,CAAEI,YALZ,EADF,GADF,EADF,cAWE,kCACE,eAAO,OAAO,CAAC,EAAf,iCACE,cACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAC,OAFV,CAGE,IAAI,CAAC,KAHP,CAIE,EAAE,CAAC,SAJL,CAKE,KAAK,CAAEF,YAAY,CAACD,GALtB,CAME,QAAQ,CAAEG,YANZ,EADF,GADF,EAXF,cAsBE,KAAC,MAAD,EAAQ,IAAI,CAAE,SAAd,EAtBF,GAFF,cA2BE,qBAAMN,aAAa,CAACuB,MAAd,GAAyB,GAAzB,eACJ,oCACE,uCADF,cAEE,mBAAIvB,aAAa,CAACgB,IAAd,CAAmBQ,UAAvB,EAFF,GADF,EA3BF,GADF,EADF,CAuCD,CAED,cAAezB,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'\nimport Button from './components/Button';\n\nfunction App() {\n  const [encryptedText, setEncryptedText] = useState({})\n  const [shiftEncrypt, setShiftEncrypt] = useState({\n    plaintext: '',\n    key: 0\n  })\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setShiftEncrypt({\n      ...shiftEncrypt,\n      [name]: value\n    });\n  };\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // const path = 'http://127.0.0.1:5000/shift_encrypt'\n    const path = 'https://cryptography-web-application.herokuapp.com/shift_encrypt'\n    axios({\n      method: 'POST',\n      url: path,\n      data: {\n        plaintext: shiftEncrypt.plaintext,\n        key: shiftEncrypt.key\n      }\n    })\n      .then(response => {\n        console.log(\"SUCCESS\", response)\n        setEncryptedText(response)\n      }).catch(error => {\n        console.log(error)\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Cryptography Web App</h1>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"\">Plaintext:\n              <input\n                type=\"text\"\n                name=\"plaintext\"\n                id=\"plain-text\"\n                value={shiftEncrypt.plaintext}\n                onChange={handleChange} />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"\">Shift:\n              <input\n                type=\"number\"\n                pattern='[0-9]'\n                name=\"key\"\n                id=\"key-num\"\n                value={shiftEncrypt.key}\n                onChange={handleChange} />\n            </label>\n          </div>\n          <Button name={'Encrypt'} />\n        </form>\n\n        <div>{encryptedText.status === 200 &&\n          <div>\n            <h4>Encrypted Text:</h4>\n            <p>{encryptedText.data.ciphertext}</p>\n          </div>}\n        </div>\n      </header>\n\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}