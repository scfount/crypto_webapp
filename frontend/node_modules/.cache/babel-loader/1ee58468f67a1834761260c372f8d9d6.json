{"ast":null,"code":"var _jsxFileName = \"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/vigenere/VigenereDecrypt.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../../App.css';\nimport Button from '../Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VigenereDecrypt() {\n  _s();\n\n  const [decryptedText, setDecryptedText] = useState({});\n  const [vigenereDecrypt, setVigenereDecrypt] = useState({\n    ciphertext: '',\n    key: null\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setVigenereDecrypt({ ...vigenereDecrypt,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const path = \"\";\n\n    if (vigenereDecrypt.key == null) {\n      path = 'http://127.0.0.1:5000/vigenere_encrypt_nokey';\n    } else {\n      path = 'http://127.0.0.1:5000/vigenere_encrypt'; // path = 'https://cryptography-web-application.herokuapp.com/vigenere_decrypt'\n    }\n\n    axios({\n      method: 'POST',\n      url: path,\n      data: {\n        ciphertext: vigenereDecrypt.ciphertext,\n        key: vigenereDecrypt.key\n      }\n    }).then(response => {\n      console.log(\"SUCCESS\", response);\n      setDecryptedText(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Decryption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Ciphertext:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"ciphertext\",\n            id: \"cipher-text\",\n            value: vigenereDecrypt.ciphertext,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"key\",\n            id: \"key-value\",\n            value: vigenereDecrypt.key,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: 'Decrypt'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: decryptedText.status === 200 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Decrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: decryptedText.data.plaintext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VigenereDecrypt, \"KeasVbmO4qMJiG+2wGpajH+uJ/Q=\");\n\n_c = VigenereDecrypt;\nexport default VigenereDecrypt;\n\nvar _c;\n\n$RefreshReg$(_c, \"VigenereDecrypt\");","map":{"version":3,"sources":["/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/vigenere/VigenereDecrypt.js"],"names":["React","useState","axios","Button","VigenereDecrypt","decryptedText","setDecryptedText","vigenereDecrypt","setVigenereDecrypt","ciphertext","key","handleChange","event","name","value","target","handleSubmit","preventDefault","path","method","url","data","then","response","console","log","catch","error","status","plaintext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\n\nfunction VigenereDecrypt() {\n    const [decryptedText, setDecryptedText] = useState({})\n    const [vigenereDecrypt, setVigenereDecrypt] = useState({\n        ciphertext: '',\n        key: null\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setVigenereDecrypt({\n            ...vigenereDecrypt,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const path = \"\"\n        if (vigenereDecrypt.key == null) {\n            path = 'http://127.0.0.1:5000/vigenere_encrypt_nokey'\n        }\n        else {\n            path = 'http://127.0.0.1:5000/vigenere_encrypt'\n            // path = 'https://cryptography-web-application.herokuapp.com/vigenere_decrypt'\n        }\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                ciphertext: vigenereDecrypt.ciphertext,\n                key: vigenereDecrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setDecryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div>\n            <h3>Decryption</h3>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Ciphertext:\n                        <input\n                            type=\"text\"\n                            name=\"ciphertext\"\n                            id=\"cipher-text\"\n                            value={vigenereDecrypt.ciphertext}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Key:\n                        <input\n                            type=\"text\"\n                            name=\"key\"\n                            id=\"key-value\"\n                            value={vigenereDecrypt.key}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Decrypt'} />\n            </form>\n\n            <div className='text'>{decryptedText.status === 200 &&\n                <div>\n                    <h4>Decrypted Text:</h4>\n                    <p>{decryptedText.data.plaintext}</p>\n                </div>}\n            </div>\n\n        </div>\n    );\n}\n\nexport default VigenereDecrypt;"]},"metadata":{},"sourceType":"module"}