{"ast":null,"code":"import _defineProperty from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import axios from'axios';import'../../App.css';import Button from'../Button';import Card from'../Card';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AffineEncrypt(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),response=_useState2[0],setResponse=_useState2[1];var _useState3=useState({text:'',alpha:0,beta:0}),_useState4=_slicedToArray(_useState3,2),plaintext=_useState4[0],setPlaintext=_useState4[1];var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setPlaintext(_objectSpread(_objectSpread({},plaintext),{},_defineProperty({},name,value)));};var handleSubmit=function handleSubmit(event){event.preventDefault();// const path = 'http://127.0.0.1:5000/affine_encrypt'\nvar path='https://cryptography-web-application.herokuapp.com/affine_encrypt';axios({method:'POST',url:path,data:{text:plaintext.text,alpha:plaintext.alpha,beta:plaintext.beta}}).then(function(response){console.log(\"SUCCESS\",response);setResponse(response);}).catch(function(error){console.log(error);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Encryption\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"\",children:[\"Plaintext:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"text\",id:\"plaintext\",value:plaintext.text,onChange:handleChange})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"\",children:[\"Alpha:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",pattern:\"[0-9]\",name:\"alpha\",id:\"alpha-num\",value:plaintext.alpha,onChange:handleChange})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"\",children:[\"Beta:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",pattern:\"[0-9]\",name:\"beta\",id:\"beta-num\",value:plaintext.beta,onChange:handleChange})]})}),/*#__PURE__*/_jsx(Button,{name:'Encrypt'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text\",children:response.status===200&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Encrypted Text:\"}),/*#__PURE__*/_jsx(Card,{text:response.data.ciphertext,shiftKey:null},response.data.ciphertext)]})})]});}export default AffineEncrypt;","map":{"version":3,"sources":["/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/affine/AffineEncrypt.js"],"names":["React","useState","axios","Button","Card","AffineEncrypt","response","setResponse","text","alpha","beta","plaintext","setPlaintext","handleChange","event","target","name","value","handleSubmit","preventDefault","path","method","url","data","then","console","log","catch","error","status","ciphertext"],"mappings":"0bAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,C,wFAEA,QAASC,CAAAA,aAAT,EAAyB,CACrB,cAAgCJ,QAAQ,CAAC,EAAD,CAAxC,wCAAOK,QAAP,eAAiBC,WAAjB,eACA,eAAkCN,QAAQ,CAAC,CACvCO,IAAI,CAAE,EADiC,CAEvCC,KAAK,CAAE,CAFgC,CAGvCC,IAAI,CAAE,CAHiC,CAAD,CAA1C,yCAAOC,SAAP,eAAkBC,YAAlB,eAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CACAL,YAAY,gCACLD,SADK,wBAEPK,IAFO,CAEAC,KAFA,GAAZ,CAIH,CAND,CASA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAW,CAC5BA,KAAK,CAACK,cAAN,GACA;AACA,GAAMC,CAAAA,IAAI,CAAG,mEAAb,CACAlB,KAAK,CAAC,CACFmB,MAAM,CAAE,MADN,CAEFC,GAAG,CAAEF,IAFH,CAGFG,IAAI,CAAE,CACFf,IAAI,CAAEG,SAAS,CAACH,IADd,CAEFC,KAAK,CAAEE,SAAS,CAACF,KAFf,CAGFC,IAAI,CAAEC,SAAS,CAACD,IAHd,CAHJ,CAAD,CAAL,CASKc,IATL,CASU,SAAAlB,QAAQ,CAAI,CACdmB,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBpB,QAAvB,EACAC,WAAW,CAACD,QAAD,CAAX,CACH,CAZL,EAYOqB,KAZP,CAYa,SAAAC,KAAK,CAAI,CACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ,EACH,CAdL,EAeH,CAnBD,CAqBA,mBACI,oCACI,kCADJ,cAEI,cAAM,QAAQ,CAAEV,YAAhB,wBACI,kCACI,eAAO,OAAO,CAAC,EAAf,qCACI,cACI,IAAI,CAAC,MADT,CAEI,IAAI,CAAC,MAFT,CAGI,EAAE,CAAC,WAHP,CAII,KAAK,CAAEP,SAAS,CAACH,IAJrB,CAKI,QAAQ,CAAEK,YALd,EADJ,GADJ,EADJ,cAWI,kCACI,eAAO,OAAO,CAAC,EAAf,iCACI,cACI,IAAI,CAAC,QADT,CAEI,OAAO,CAAC,OAFZ,CAGI,IAAI,CAAC,OAHT,CAII,EAAE,CAAC,WAJP,CAKI,KAAK,CAAEF,SAAS,CAACF,KALrB,CAMI,QAAQ,CAAEI,YANd,EADJ,GADJ,EAXJ,cAsBI,kCACI,eAAO,OAAO,CAAC,EAAf,gCACI,cACI,IAAI,CAAC,QADT,CAEI,OAAO,CAAC,OAFZ,CAGI,IAAI,CAAC,MAHT,CAII,EAAE,CAAC,UAJP,CAKI,KAAK,CAAEF,SAAS,CAACD,IALrB,CAMI,QAAQ,CAAEG,YANd,EADJ,GADJ,EAtBJ,cAiCI,KAAC,MAAD,EAAQ,IAAI,CAAE,SAAd,EAjCJ,GAFJ,cAsCI,YAAK,SAAS,CAAC,MAAf,UACKP,QAAQ,CAACuB,MAAT,GAAoB,GAApB,eACG,oCACI,uCADJ,cAEI,KAAC,IAAD,EAAM,IAAI,CAAEvB,QAAQ,CAACiB,IAAT,CAAcO,UAA1B,CAAsC,QAAQ,CAAE,IAAhD,EAA2DxB,QAAQ,CAACiB,IAAT,CAAcO,UAAzE,CAFJ,GAFR,EAtCJ,GADJ,CAgDH,CAED,cAAezB,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\nimport Card from '../Card';\n\nfunction AffineEncrypt() {\n    const [response, setResponse] = useState({})\n    const [plaintext, setPlaintext] = useState({\n        text: '',\n        alpha: 0,\n        beta: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setPlaintext({\n            ...plaintext,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // const path = 'http://127.0.0.1:5000/affine_encrypt'\n        const path = 'https://cryptography-web-application.herokuapp.com/affine_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                text: plaintext.text,\n                alpha: plaintext.alpha,\n                beta: plaintext.beta\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setResponse(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div>\n            <h3>Encryption</h3>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Plaintext:\n                        <input\n                            type=\"text\"\n                            name=\"text\"\n                            id=\"plaintext\"\n                            value={plaintext.text}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Alpha:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"alpha\"\n                            id=\"alpha-num\"\n                            value={plaintext.alpha}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Beta:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"beta\"\n                            id=\"beta-num\"\n                            value={plaintext.beta}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Encrypt'} />\n            </form>\n\n            <div className='text'>\n                {response.status === 200 &&\n                    <div>\n                        <h4>Encrypted Text:</h4>\n                        <Card text={response.data.ciphertext} shiftKey={null} key={response.data.ciphertext} />\n                    </div>}\n            </div>\n        </div>\n    );\n}\n\nexport default AffineEncrypt;"]},"metadata":{},"sourceType":"module"}