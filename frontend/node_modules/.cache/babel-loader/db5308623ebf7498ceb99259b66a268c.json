{"ast":null,"code":"var _jsxFileName = \"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftDecrypt.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../../App.css';\nimport Button from '../Button';\nimport Card from '../Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ShiftDecrypt() {\n  _s();\n\n  const [decryptedText, setDecryptedText] = useState({});\n  const [shiftDecrypt, setShiftDecrypt] = useState({\n    ciphertext: \"\",\n    key: \"\"\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setShiftDecrypt({ ...shiftDecrypt,\n      [name]: value\n    });\n  };\n\n  const getDecryptions = path => {\n    axios({\n      method: 'POST',\n      url: path,\n      data: {\n        ciphertext: shiftDecrypt.ciphertext,\n        key: shiftDecrypt.key\n      }\n    }).then(response => {\n      console.log(\"SUCCESS\", response);\n      setDecryptedText(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (isNaN(parseInt(shiftDecrypt.key))) {\n      // const path = 'http://127.0.0.1:5000/shift_decrypt_no_key'\n      const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt_no_key';\n      getDecryptions(path);\n    } else {\n      // const path = 'http://127.0.0.1:5000/shift_decrypt'\n      const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt';\n      getDecryptions(path);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Decryption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Ciphertext:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"ciphertext\",\n            id: \"cipher-text\",\n            value: shiftDecrypt.ciphertext,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            pattern: \"[0-9]\",\n            name: \"key\",\n            id: \"key-num\",\n            value: shiftDecrypt.key,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: 'Decrypt'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: decryptedText.status === 200 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Decrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          text: decryptedText.data.plaintext,\n          shift_key: shiftDecrypt.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShiftDecrypt, \"avLvdwWKuOsh/dWlt+BUvljh0JM=\");\n\n_c = ShiftDecrypt;\nexport default ShiftDecrypt;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShiftDecrypt\");","map":{"version":3,"sources":["/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/shift/ShiftDecrypt.js"],"names":["React","useState","axios","Button","Card","ShiftDecrypt","decryptedText","setDecryptedText","shiftDecrypt","setShiftDecrypt","ciphertext","key","handleChange","event","name","value","target","getDecryptions","path","method","url","data","then","response","console","log","catch","error","handleSubmit","preventDefault","isNaN","parseInt","status","plaintext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\nimport Card from '../Card';\n\nfunction ShiftDecrypt() {\n    const [decryptedText, setDecryptedText] = useState({})\n    const [shiftDecrypt, setShiftDecrypt] = useState({\n        ciphertext: \"\",\n        key: \"\"\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setShiftDecrypt({\n            ...shiftDecrypt,\n            [name]: value\n        });\n    };\n\n    const getDecryptions = (path) => {\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                ciphertext: shiftDecrypt.ciphertext,\n                key: shiftDecrypt.key\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setDecryptedText(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (isNaN(parseInt(shiftDecrypt.key))) {\n            // const path = 'http://127.0.0.1:5000/shift_decrypt_no_key'\n            const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt_no_key'\n            getDecryptions(path)\n        }\n\n        else {\n            // const path = 'http://127.0.0.1:5000/shift_decrypt'\n            const path = 'https://cryptography-web-application.herokuapp.com/shift_decrypt'\n            getDecryptions(path)\n        }\n    }\n\n    return (\n        <div>\n            <h3>Decryption</h3>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Ciphertext:\n                        <input\n                            type=\"text\"\n                            name=\"ciphertext\"\n                            id=\"cipher-text\"\n                            value={shiftDecrypt.ciphertext}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Key:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"key\"\n                            id=\"key-num\"\n                            value={shiftDecrypt.key}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Decrypt'} />\n            </form>\n\n            <div className='text'>{decryptedText.status === 200 &&\n                <div>\n                    <h4>Decrypted Text:</h4>\n                    <Card text={decryptedText.data.plaintext} shift_key={shiftDecrypt.key} />\n                </div>}\n            </div>\n\n        </div>\n    );\n}\n\nexport default ShiftDecrypt;"]},"metadata":{},"sourceType":"module"}