{"ast":null,"code":"var _jsxFileName = \"/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/affine/AffineEncrypt.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../../App.css';\nimport Button from '../Button';\nimport Card from '../Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AffineEncrypt() {\n  _s();\n\n  const [response, setResponse] = useState({});\n  const [plaintext, setPlaintext] = useState({\n    text: '',\n    alpha: 0,\n    beta: 0\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPlaintext({ ...plaintext,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const path = 'http://127.0.0.1:5000/affine_encrypt'; // const path = 'https://cryptography-web-application.herokuapp.com/affine_encrypt'\n\n    axios({\n      method: 'POST',\n      url: path,\n      data: {\n        text: plaintext.text,\n        alpha: plaintext.alpha,\n        beta: plaintext.beta\n      }\n    }).then(response => {\n      console.log(\"SUCCESS\", response);\n      setResponse(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Encryption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Plaintext:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"text\",\n            id: \"plaintext\",\n            value: plaintext.text,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Alpha:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            pattern: \"[0-9]\",\n            name: \"alpha\",\n            id: \"alpha-num\",\n            value: plaintext.alpha,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Beta:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            pattern: \"[0-9]\",\n            name: \"beta\",\n            id: \"beta-num\",\n            value: plaintext.beta,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: 'Encrypt'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: response.status === 200 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Encrypted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          text: response.data.decryption,\n          shiftKey: null\n        }, decryptedText.data.decryption, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response.data.ciphertext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AffineEncrypt, \"gaYlTe5GVjbuZp3Fr1i6Kll4DSs=\");\n\n_c = AffineEncrypt;\nexport default AffineEncrypt;\n\nvar _c;\n\n$RefreshReg$(_c, \"AffineEncrypt\");","map":{"version":3,"sources":["/Users/stevenfountain/Documents/GitHub/crypto_webapp/frontend/src/components/affine/AffineEncrypt.js"],"names":["React","useState","axios","Button","Card","AffineEncrypt","response","setResponse","plaintext","setPlaintext","text","alpha","beta","handleChange","event","name","value","target","handleSubmit","preventDefault","path","method","url","data","then","console","log","catch","error","status","decryption","decryptedText","ciphertext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'\nimport '../../App.css';\nimport Button from '../Button';\nimport Card from '../Card';\n\nfunction AffineEncrypt() {\n    const [response, setResponse] = useState({})\n    const [plaintext, setPlaintext] = useState({\n        text: '',\n        alpha: 0,\n        beta: 0\n    })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setPlaintext({\n            ...plaintext,\n            [name]: value\n        });\n    };\n\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const path = 'http://127.0.0.1:5000/affine_encrypt'\n        // const path = 'https://cryptography-web-application.herokuapp.com/affine_encrypt'\n        axios({\n            method: 'POST',\n            url: path,\n            data: {\n                text: plaintext.text,\n                alpha: plaintext.alpha,\n                beta: plaintext.beta\n            }\n        })\n            .then(response => {\n                console.log(\"SUCCESS\", response)\n                setResponse(response)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    return (\n        <div>\n            <h3>Encryption</h3>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"\">Plaintext:\n                        <input\n                            type=\"text\"\n                            name=\"text\"\n                            id=\"plaintext\"\n                            value={plaintext.text}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Alpha:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"alpha\"\n                            id=\"alpha-num\"\n                            value={plaintext.alpha}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <div>\n                    <label htmlFor=\"\">Beta:\n                        <input\n                            type=\"number\"\n                            pattern='[0-9]'\n                            name=\"beta\"\n                            id=\"beta-num\"\n                            value={plaintext.beta}\n                            onChange={handleChange} />\n                    </label>\n                </div>\n                <Button name={'Encrypt'} />\n            </form>\n\n            <div className='text'>{response.status === 200 &&\n                <div>\n                    <h4>Encrypted Text:</h4>\n                    <Card text={response.data.decryption} shiftKey={null} key={decryptedText.data.decryption} />\n                    <p>{response.data.ciphertext}</p>\n                </div>}\n            </div>\n        </div>\n    );\n}\n\nexport default AffineEncrypt;"]},"metadata":{},"sourceType":"module"}